From 3b892ade0eac384ac47607c81c8f2e8ccb3d95bd Mon Sep 17 00:00:00 2001
From: Tux <write@imaginarycode.com>
Date: Thu, 19 May 2016 17:36:31 -0600
Subject: [PATCH] Better unit tests for Chat API


diff --git a/chat/src/test/java/net/md_5/bungee/api/chat/ComponentsTest.java b/chat/src/test/java/net/md_5/bungee/api/chat/ComponentsTest.java
index 6eda2a72..22398005 100644
--- a/chat/src/test/java/net/md_5/bungee/api/chat/ComponentsTest.java
+++ b/chat/src/test/java/net/md_5/bungee/api/chat/ComponentsTest.java
@@ -202,6 +202,26 @@ public class ComponentsTest
         Assert.assertEquals( eventRetention[1].getClickEvent(), testClickEvent );
     }
 
+    @Test
+    public void testBuilderSpecialFormatting()
+    {
+        BaseComponent[] components = new ComponentBuilder( "Hello " )
+                .bold(true).underlined(true).italic(true).strikethrough(true).obfuscated(true)
+                .append("World").underlined(false).strikethrough(false).create();
+
+        Assert.assertTrue( components[0].isBold() );
+        Assert.assertTrue( components[0].isUnderlined() );
+        Assert.assertTrue( components[0].isItalic() );
+        Assert.assertTrue( components[0].isStrikethrough() );
+        Assert.assertTrue( components[0].isObfuscated() );
+
+        Assert.assertTrue( components[1].isBold() );
+        Assert.assertFalse( components[1].isUnderlined() );
+        Assert.assertTrue( components[1].isItalic() );
+        Assert.assertFalse( components[1].isStrikethrough() );
+        Assert.assertTrue( components[1].isObfuscated() );
+    }
+
     @Test(expected = IllegalArgumentException.class)
     public void testLoopSimple()
     {
diff --git a/chat/src/test/java/net/md_5/bungee/api/chat/TranslatableComponentTest.java b/chat/src/test/java/net/md_5/bungee/api/chat/TranslatableComponentTest.java
index 0837c672..38147e2a 100644
--- a/chat/src/test/java/net/md_5/bungee/api/chat/TranslatableComponentTest.java
+++ b/chat/src/test/java/net/md_5/bungee/api/chat/TranslatableComponentTest.java
@@ -13,4 +13,12 @@ public class TranslatableComponentTest
         assertEquals( "Test string with 2 placeholders: aoeu", testComponent.toPlainText() );
         assertEquals( "§fTest string with §f2§f placeholders: §faoeu", testComponent.toLegacyText() );
     }
+
+    @Test
+    public void testEscapedPercentInPlainText()
+    {
+        TranslatableComponent testComponent = new TranslatableComponent( "Test string with %% sign" );
+        assertEquals( "Test string with % sign", testComponent.toPlainText() );
+        assertEquals( "§fTest string with §f%§f sign", testComponent.toLegacyText() );
+    }
 }
-- 
2.16.1

